{"mappings":"AAAA;IACE,MAAM,EAAE,MAAM,CAAA;CACf;ACAD;IACE,SAAS,WAAoC;IAC7C,SAAS,WAAoC;IAC7C,uBAAuB,WAAwC;IAE/D,WAAW,QAAO,MAAM,CAAkC;IAC1D,eAAe,eAAyC;IACxD,eAAe,eAAyC;IACxD,YAAY,eAAuD;IAEnE,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC;IAK9B,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,GAAG,MAAM;CAIpD;ACnBD;;gBAGc,UAAU,EAAE,UAAU;IAIlC,SAAS,CAAC,GAAG,EAAE,MAAM;IAIrB,SAAS,CAAC,GAAG,EAAE,MAAM;IAIrB,IAAI,CAAC,GAAG,MAAM,EAAE,MAAM,EAAE;CAGzB;ACjBD;IACE,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAA;CACxC;AAqCD;;IAGE,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC;gBAS7B,UAAU,EAAE,UAAU;IAIlC,oBAAoB,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,mBAAmB;IAOxD,qBAAqB,CAAC,CAAC,EACrB,MAAM,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,GAC7B,mBAAmB;CAQvB;AGlED;;gBAIc,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,cAAc;IAgB1D,OAAO,eAAgD;IACvD,IAAI,eAAmD;IACvD,SAAS,eAA6B;IACtC,UAAU,eAAmD;IAC7D,SAAS,eAAoD;IAC7D,WAAW,eAA4B;IACvC,SAAS,eAAkD;IAC3D,IAAI,eAAiC;IACrC,QAAQ,eAAgD;IAExD,IAAI;IAIJ,IAAI;IAMJ,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,GAAG,MAAM,GAAG,IAAI;IAwBtC,IAAI,SAAS,aAEZ;IAED,IAAI,SAAS,aAEZ;CACF;AC5ED,6BACI,YAAY,GACZ,MAAM,GACN,kBAAkB,GAClB,eAAe,CAAA;AAkDnB;IACE,IAAI,EAAE,qBAAqB,CAAA;IAC3B,MAAM,EAAE,MAAM,CAAA;IACd,UAAU,EAAE,MAAM,CAAA;IAClB,MAAM,EAAE,MAAM,CAAA;CACf;AAED;;gBAKc,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY;IAM1E,cAAc,IAAI,kBAAkB;CAerC;AEtFD;;gBAGc,UAAU,EAAE,UAAU;IAIlC,OAAO,eAA8C;IACrD,KAAK,eAAwC;IAC7C,QAAQ,eAAkD;IAC1D,IAAI,eAAkD;IACtD,QAAQ,iBAAmD;IAC3D,SAAS,iBAA+C;IACxD,IAAI,eAA+C;IACnD,GAAG,eAA6C;IAChD,GAAG,eAGY;IAEf,IAAI,WAAW,aAEd;IAED,IAAI,WAAW,aAEd;CACF;ACxBD;IACE,UAAU,EAAE,UAAU,CAAA;IACtB,QAAQ,EAAE,QAAQ,CAAA;IAClB,eAAe,EAAE,eAAe,CAAA;IAChC,IAAI,EAAE,YAAY,CAAA;IAClB,UAAU,EAAE,kBAAkB,CAAA;IAC9B,KAAK,EAAE,aAAa,CAAA;gBAER,MAAM,EAAE,cAAc;CAYnC","sources":["src/src/utils/Config.ts","src/src/utils/Randomizer.ts","src/src/utils/Replacer.ts","src/src/utils/RandomGenerator.ts","src/src/utils/functions.ts","src/src/providers/Date/Date.ts","src/src/providers/DateProvider.ts","src/src/providers/CreditCardProvider.ts","src/src/providers/Colors/Colors.ts","src/src/providers/ColorProvider.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,"import { IConfigOptions } from './utils/Config'\nimport { Randomizer } from './utils/Randomizer'\nimport { Replacer } from './utils/Replacer'\nimport { RandomGenerator } from './utils/RandomGenerator'\nimport { CreditCardProvider } from './providers/CreditCardProvider'\nimport { ColorProvider } from './providers/ColorProvider'\nimport { DateProvider } from './providers/DateProvider'\n\nexport class Offhand {\n  randomizer: Randomizer\n  replacer: Replacer\n  randomGenerator: RandomGenerator\n  date: DateProvider\n  creditCard: CreditCardProvider\n  color: ColorProvider\n\n  constructor(config: IConfigOptions) {\n    this.randomizer = new Randomizer()\n    this.replacer = new Replacer(this.randomizer)\n    this.randomGenerator = new RandomGenerator(this.randomizer)\n    this.date = new DateProvider(this.randomizer, config)\n    this.creditCard = new CreditCardProvider(\n      this.randomizer,\n      this.replacer,\n      this.date,\n    )\n    this.color = new ColorProvider(this.randomizer)\n  }\n}\n"],"names":[],"version":3,"file":"index.d.ts.map"}